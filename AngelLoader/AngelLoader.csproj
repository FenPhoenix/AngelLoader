<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net472</TargetFramework>
    <UseWindowsForms>true</UseWindowsForms>
    <Platforms>AnyCPU;x86</Platforms>
    <LangVersion>latest</LangVersion>
    <Configurations>Debug;Release;Release_Beta;Release_Public;Release_Testing;RT_StartupOnly;Release_Testing_NoAsserts</Configurations>
    <StartupObject>AngelLoader.Program</StartupObject>
    <ApplicationIcon>Resources\AngelLoader.ico</ApplicationIcon>
    <ApplicationManifest>app.manifest</ApplicationManifest>

    <Nullable>enable</Nullable>

    <AssemblyTitle>AngelLoader</AssemblyTitle>
    <Product>AngelLoader</Product>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Description>A standalone fan mission loader and manager for Thief Gold, Thief II, Thief: Deadly Shadows, and System Shock 2.</Description>
    <Copyright>Copyright © 2018 - 2020</Copyright>
    <Version>1.4.2</Version>
    <AssemblyVersion>1.4.2</AssemblyVersion>
    <FileVersion>1.4.2</FileVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <DefineConstants>DEBUG;TRACE;Debug</DefineConstants>
    <OutputPath>bin\x86\Debug\</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <DefineConstants>TRACE;Release</DefineConstants>
    <OutputPath>bin\x86\Release\</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Testing|x86'">
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;Release,Release_Testing</DefineConstants>
    <OutputPath>bin\x86\Release\</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Testing_NoAsserts|x86'">
    <Optimize>true</Optimize>
    <DefineConstants>TRACE;Release,Release_Testing,NoAsserts</DefineConstants>
    <OutputPath>bin\x86\Release\</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Beta|x86'">
    <OutputPath>bin\x86\Release_Beta\</OutputPath>
    <DefineConstants>TRACE;Release, ReleaseBeta</DefineConstants>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release_Public|x86'">
    <DefineConstants>TRACE;Release, ReleasePublic</DefineConstants>
    <OutputPath>bin\x86\Release_Public\</OutputPath>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RT_StartupOnly|x86'">
    <DefineConstants>TRACE;Release,Release_Testing,RT_StartupOnly</DefineConstants>
    <Optimize>true</Optimize>
    <OutputPath>bin\x86\Release\</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="7z.Libs" Version="19.0.1" />
    <PackageReference Include="JetBrains.Annotations" Version="2020.1.0" />
    <PackageReference Include="Nullable" Version="1.2.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Squid-Box.SevenZipSharp" Version="1.3.283" />
    <PackageReference Include="xFFmpeg.NET" Version="3.4.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FMScanner\FMScanner.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.VisualBasic" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Design" />
    <Reference Include="System.IO.Compression" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <Import Project="exclude_resx.props" />

  <ItemGroup>
    <!--
      The only resx file that's actually required is the main one here. It contains all the images and icons.
      If it were up to me we wouldn't use this either, as it's accessed through horrendous reflection that takes
      all day about getting images (that's why we cache them), but whatcha gonna do.
    -->
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="pre_build.bat &quot;$(Configuration)&quot; &quot;$(TargetDir)&quot; &quot;$(ProjectDir)&quot; &quot;$(SolutionDir)&quot;" WorkingDirectory="$(ProjectDir)" />
  </Target>
  <!--
    "NG7zLibs_net_AfterBuild" is a 7z.libs target. We have to run after it if we want the 7z.dll file to exist so
    we can copy it. Blah. Also, it underlines the string like it doesn't exist, but it does find it. Tested.
  -->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent" DependsOnTargets="NG7zLibs_net_AfterBuild">
    <Exec Command="post_build.bat &quot;$(Configuration)&quot; &quot;$(TargetDir)&quot; &quot;$(ProjectDir)&quot; &quot;$(SolutionDir)&quot;" WorkingDirectory="$(ProjectDir)" />
  </Target>

</Project>