using System.IO;
using System.Text;
using AngelLoader.Common.DataClasses;
using static AngelLoader.Common.Attributes;

namespace AngelLoader.Ini
{
    [FenGenLocalizationReadWriteClass]
    internal static partial class Ini
    {
        // This method was autogenerated for maximum performance at runtime.
        internal static void ReadLocalizationIni(string file)
        {
            var lines = File.ReadAllLines(file, Encoding.UTF8);
            for (int i = 0; i < lines.Length; i++)
            {
                var lineT = lines[i].Trim();
                if (lineT == "[Meta]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("LanguageName="))
                        {
                            LText.Meta.LanguageName = lt.Substring(13);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[Global]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("OK="))
                        {
                            LText.Global.OK = lt.Substring(3);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Cancel="))
                        {
                            LText.Global.Cancel = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("BrowseEllipses="))
                        {
                            LText.Global.BrowseEllipses = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Add="))
                        {
                            LText.Global.Add = lt.Substring(4);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("AddEllipses="))
                        {
                            LText.Global.AddEllipses = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Remove="))
                        {
                            LText.Global.Remove = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RemoveEllipses="))
                        {
                            LText.Global.RemoveEllipses = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Reset="))
                        {
                            LText.Global.Reset = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Unrated="))
                        {
                            LText.Global.Unrated = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("None="))
                        {
                            LText.Global.None = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CustomTagInCategory="))
                        {
                            LText.Global.CustomTagInCategory = lt.Substring(20);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("KilobyteShort="))
                        {
                            LText.Global.KilobyteShort = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("MegabyteShort="))
                        {
                            LText.Global.MegabyteShort = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("GigabyteShort="))
                        {
                            LText.Global.GigabyteShort = lt.Substring(14);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[BrowseDialogs]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("AllFiles="))
                        {
                            LText.BrowseDialogs.AllFiles = lt.Substring(9);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ExeFiles="))
                        {
                            LText.BrowseDialogs.ExeFiles = lt.Substring(9);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("IniFiles="))
                        {
                            LText.BrowseDialogs.IniFiles = lt.Substring(9);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[AlertMessages]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("Alert="))
                        {
                            LText.AlertMessages.Alert = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Warning="))
                        {
                            LText.AlertMessages.Warning = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Error="))
                        {
                            LText.AlertMessages.Error = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("WebSearchURLIsInvalid="))
                        {
                            LText.AlertMessages.WebSearchURLIsInvalid = lt.Substring(22);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Install_UnknownGameType="))
                        {
                            LText.AlertMessages.Install_UnknownGameType = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Install_UnsupportedGameType="))
                        {
                            LText.AlertMessages.Install_UnsupportedGameType = lt.Substring(28);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Install_ArchiveNotFound="))
                        {
                            LText.AlertMessages.Install_ArchiveNotFound = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Install_ExecutableNotFound="))
                        {
                            LText.AlertMessages.Install_ExecutableNotFound = lt.Substring(27);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Install_FMInstallPathNotFound="))
                        {
                            LText.AlertMessages.Install_FMInstallPathNotFound = lt.Substring(30);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Install_GameIsRunning="))
                        {
                            LText.AlertMessages.Install_GameIsRunning = lt.Substring(22);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Uninstall_GameIsRunning="))
                        {
                            LText.AlertMessages.Uninstall_GameIsRunning = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Uninstall_FMAlreadyUninstalled="))
                        {
                            LText.AlertMessages.Uninstall_FMAlreadyUninstalled = lt.Substring(31);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Uninstall_ArchiveNotFound="))
                        {
                            LText.AlertMessages.Uninstall_ArchiveNotFound = lt.Substring(26);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Uninstall_UninstallNotCompleted="))
                        {
                            LText.AlertMessages.Uninstall_UninstallNotCompleted = lt.Substring(32);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Uninstall_BackupSavesAndScreenshots="))
                        {
                            LText.AlertMessages.Uninstall_BackupSavesAndScreenshots = lt.Substring(36);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FileConversion_GameIsRunning="))
                        {
                            LText.AlertMessages.FileConversion_GameIsRunning = lt.Substring(29);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Play_ExecutableNotFound="))
                        {
                            LText.AlertMessages.Play_ExecutableNotFound = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Play_ExecutableNotFoundFM="))
                        {
                            LText.AlertMessages.Play_ExecutableNotFoundFM = lt.Substring(26);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Play_GameIsRunning="))
                        {
                            LText.AlertMessages.Play_GameIsRunning = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Play_UnknownGameType="))
                        {
                            LText.AlertMessages.Play_UnknownGameType = lt.Substring(21);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[Difficulties]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("Easy="))
                        {
                            LText.Difficulties.Easy = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Normal="))
                        {
                            LText.Difficulties.Normal = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Hard="))
                        {
                            LText.Difficulties.Hard = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Expert="))
                        {
                            LText.Difficulties.Expert = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Extreme="))
                        {
                            LText.Difficulties.Extreme = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Unknown="))
                        {
                            LText.Difficulties.Unknown = lt.Substring(8);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[GameTabs]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("Thief1="))
                        {
                            LText.GameTabs.Thief1 = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief2="))
                        {
                            LText.GameTabs.Thief2 = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief3="))
                        {
                            LText.GameTabs.Thief3 = lt.Substring(7);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[FilterBar]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("Thief1ToolTip="))
                        {
                            LText.FilterBar.Thief1ToolTip = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief2ToolTip="))
                        {
                            LText.FilterBar.Thief2ToolTip = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief3ToolTip="))
                        {
                            LText.FilterBar.Thief3ToolTip = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Title="))
                        {
                            LText.FilterBar.Title = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Author="))
                        {
                            LText.FilterBar.Author = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReleaseDateToolTip="))
                        {
                            LText.FilterBar.ReleaseDateToolTip = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("LastPlayedToolTip="))
                        {
                            LText.FilterBar.LastPlayedToolTip = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("TagsToolTip="))
                        {
                            LText.FilterBar.TagsToolTip = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FinishedToolTip="))
                        {
                            LText.FilterBar.FinishedToolTip = lt.Substring(16);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("UnfinishedToolTip="))
                        {
                            LText.FilterBar.UnfinishedToolTip = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RatingToolTip="))
                        {
                            LText.FilterBar.RatingToolTip = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ShowJunk="))
                        {
                            LText.FilterBar.ShowJunk = lt.Substring(9);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RefreshFilteredListButtonToolTip="))
                        {
                            LText.FilterBar.RefreshFilteredListButtonToolTip = lt.Substring(33);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ClearFiltersButtonToolTip="))
                        {
                            LText.FilterBar.ClearFiltersButtonToolTip = lt.Substring(26);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ResetLayoutButtonToolTip="))
                        {
                            LText.FilterBar.ResetLayoutButtonToolTip = lt.Substring(25);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[FMsList]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("GameColumn="))
                        {
                            LText.FMsList.GameColumn = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("InstalledColumn="))
                        {
                            LText.FMsList.InstalledColumn = lt.Substring(16);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("TitleColumn="))
                        {
                            LText.FMsList.TitleColumn = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ArchiveColumn="))
                        {
                            LText.FMsList.ArchiveColumn = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("AuthorColumn="))
                        {
                            LText.FMsList.AuthorColumn = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("SizeColumn="))
                        {
                            LText.FMsList.SizeColumn = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RatingColumn="))
                        {
                            LText.FMsList.RatingColumn = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FinishedColumn="))
                        {
                            LText.FMsList.FinishedColumn = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReleaseDateColumn="))
                        {
                            LText.FMsList.ReleaseDateColumn = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("LastPlayedColumn="))
                        {
                            LText.FMsList.LastPlayedColumn = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("DisabledModsColumn="))
                        {
                            LText.FMsList.DisabledModsColumn = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CommentColumn="))
                        {
                            LText.FMsList.CommentColumn = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("AllModsDisabledMessage="))
                        {
                            LText.FMsList.AllModsDisabledMessage = lt.Substring(23);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ColumnMenu_ResetAllColumnsToVisible="))
                        {
                            LText.FMsList.ColumnMenu_ResetAllColumnsToVisible = lt.Substring(36);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ColumnMenu_ResetAllColumnWidths="))
                        {
                            LText.FMsList.ColumnMenu_ResetAllColumnWidths = lt.Substring(32);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ColumnMenu_ResetAllColumnPositions="))
                        {
                            LText.FMsList.ColumnMenu_ResetAllColumnPositions = lt.Substring(35);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_PlayFM="))
                        {
                            LText.FMsList.FMMenu_PlayFM = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_InstallFM="))
                        {
                            LText.FMsList.FMMenu_InstallFM = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_UninstallFM="))
                        {
                            LText.FMsList.FMMenu_UninstallFM = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_Rating="))
                        {
                            LText.FMsList.FMMenu_Rating = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_FinishedOn="))
                        {
                            LText.FMsList.FMMenu_FinishedOn = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_ConvertAudio="))
                        {
                            LText.FMsList.FMMenu_ConvertAudio = lt.Substring(20);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_ScanFM="))
                        {
                            LText.FMsList.FMMenu_ScanFM = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMMenu_WebSearch="))
                        {
                            LText.FMsList.FMMenu_WebSearch = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ConvertAudioMenu_ConvertWAVsTo16Bit="))
                        {
                            LText.FMsList.ConvertAudioMenu_ConvertWAVsTo16Bit = lt.Substring(36);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ConvertAudioMenu_ConvertOGGsToWAVs="))
                        {
                            LText.FMsList.ConvertAudioMenu_ConvertOGGsToWAVs = lt.Substring(35);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[StatisticsTab]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TabText="))
                        {
                            LText.StatisticsTab.TabText = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CustomResources="))
                        {
                            LText.StatisticsTab.CustomResources = lt.Substring(16);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CustomResourcesNotScanned="))
                        {
                            LText.StatisticsTab.CustomResourcesNotScanned = lt.Substring(26);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CustomResourcesNotSupportedForThief3="))
                        {
                            LText.StatisticsTab.CustomResourcesNotSupportedForThief3 = lt.Substring(37);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("NoFMSelected="))
                        {
                            LText.StatisticsTab.NoFMSelected = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Map="))
                        {
                            LText.StatisticsTab.Map = lt.Substring(4);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Automap="))
                        {
                            LText.StatisticsTab.Automap = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Textures="))
                        {
                            LText.StatisticsTab.Textures = lt.Substring(9);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Sounds="))
                        {
                            LText.StatisticsTab.Sounds = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Movies="))
                        {
                            LText.StatisticsTab.Movies = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Objects="))
                        {
                            LText.StatisticsTab.Objects = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Creatures="))
                        {
                            LText.StatisticsTab.Creatures = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Motions="))
                        {
                            LText.StatisticsTab.Motions = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Scripts="))
                        {
                            LText.StatisticsTab.Scripts = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Subtitles="))
                        {
                            LText.StatisticsTab.Subtitles = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RescanCustomResources="))
                        {
                            LText.StatisticsTab.RescanCustomResources = lt.Substring(22);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[EditFMTab]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TabText="))
                        {
                            LText.EditFMTab.TabText = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Title="))
                        {
                            LText.EditFMTab.Title = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Author="))
                        {
                            LText.EditFMTab.Author = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReleaseDate="))
                        {
                            LText.EditFMTab.ReleaseDate = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("LastPlayed="))
                        {
                            LText.EditFMTab.LastPlayed = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Rating="))
                        {
                            LText.EditFMTab.Rating = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FinishedOn="))
                        {
                            LText.EditFMTab.FinishedOn = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("DisabledMods="))
                        {
                            LText.EditFMTab.DisabledMods = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("DisableAllMods="))
                        {
                            LText.EditFMTab.DisableAllMods = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RescanTitleToolTip="))
                        {
                            LText.EditFMTab.RescanTitleToolTip = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RescanAuthorToolTip="))
                        {
                            LText.EditFMTab.RescanAuthorToolTip = lt.Substring(20);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RescanReleaseDateToolTip="))
                        {
                            LText.EditFMTab.RescanReleaseDateToolTip = lt.Substring(25);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RescanForReadmes="))
                        {
                            LText.EditFMTab.RescanForReadmes = lt.Substring(17);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[CommentTab]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TabText="))
                        {
                            LText.CommentTab.TabText = lt.Substring(8);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[TagsTab]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TabText="))
                        {
                            LText.TagsTab.TabText = lt.Substring(8);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("AddTag="))
                        {
                            LText.TagsTab.AddTag = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("AddFromList="))
                        {
                            LText.TagsTab.AddFromList = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("RemoveTag="))
                        {
                            LText.TagsTab.RemoveTag = lt.Substring(10);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[ReadmeArea]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("ViewHTMLReadme="))
                        {
                            LText.ReadmeArea.ViewHTMLReadme = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ZoomInToolTip="))
                        {
                            LText.ReadmeArea.ZoomInToolTip = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ZoomOutToolTip="))
                        {
                            LText.ReadmeArea.ZoomOutToolTip = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ResetZoomToolTip="))
                        {
                            LText.ReadmeArea.ResetZoomToolTip = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FullScreenToolTip="))
                        {
                            LText.ReadmeArea.FullScreenToolTip = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("NoReadmeFound="))
                        {
                            LText.ReadmeArea.NoReadmeFound = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("UnableToLoadReadme="))
                        {
                            LText.ReadmeArea.UnableToLoadReadme = lt.Substring(19);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[PlayOriginalGameMenu]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("Thief1="))
                        {
                            LText.PlayOriginalGameMenu.Thief1 = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief2="))
                        {
                            LText.PlayOriginalGameMenu.Thief2 = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief3="))
                        {
                            LText.PlayOriginalGameMenu.Thief3 = lt.Substring(7);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[MainButtons]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("PlayFM="))
                        {
                            LText.MainButtons.PlayFM = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("InstallFM="))
                        {
                            LText.MainButtons.InstallFM = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("UninstallFM="))
                        {
                            LText.MainButtons.UninstallFM = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("PlayOriginalGame="))
                        {
                            LText.MainButtons.PlayOriginalGame = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("WebSearch="))
                        {
                            LText.MainButtons.WebSearch = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ScanAllFMs="))
                        {
                            LText.MainButtons.ScanAllFMs = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Import="))
                        {
                            LText.MainButtons.Import = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Settings="))
                        {
                            LText.MainButtons.Settings = lt.Substring(9);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[ProgressBox]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("Scanning="))
                        {
                            LText.ProgressBox.Scanning = lt.Substring(9);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("InstallingFM="))
                        {
                            LText.ProgressBox.InstallingFM = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("UninstallingFM="))
                        {
                            LText.ProgressBox.UninstallingFM = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ConvertingFiles="))
                        {
                            LText.ProgressBox.ConvertingFiles = lt.Substring(16);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CheckingInstalledFMs="))
                        {
                            LText.ProgressBox.CheckingInstalledFMs = lt.Substring(21);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReportScanningFirst="))
                        {
                            LText.ProgressBox.ReportScanningFirst = lt.Substring(20);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReportScanningBetweenNumAndTotal="))
                        {
                            LText.ProgressBox.ReportScanningBetweenNumAndTotal = lt.Substring(33);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReportScanningLast="))
                        {
                            LText.ProgressBox.ReportScanningLast = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CancelingInstall="))
                        {
                            LText.ProgressBox.CancelingInstall = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ImportingFromDarkLoader="))
                        {
                            LText.ProgressBox.ImportingFromDarkLoader = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ImportingFromNewDarkLoader="))
                        {
                            LText.ProgressBox.ImportingFromNewDarkLoader = lt.Substring(27);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ImportingFromFMSel="))
                        {
                            LText.ProgressBox.ImportingFromFMSel = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CachingReadmeFiles="))
                        {
                            LText.ProgressBox.CachingReadmeFiles = lt.Substring(19);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[SettingsWindow]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TitleText="))
                        {
                            LText.SettingsWindow.TitleText = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("StartupTitleText="))
                        {
                            LText.SettingsWindow.StartupTitleText = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_TabText="))
                        {
                            LText.SettingsWindow.Paths_TabText = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_PathsToGameExes="))
                        {
                            LText.SettingsWindow.Paths_PathsToGameExes = lt.Substring(22);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_Thief1="))
                        {
                            LText.SettingsWindow.Paths_Thief1 = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_Thief2="))
                        {
                            LText.SettingsWindow.Paths_Thief2 = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_Thief3="))
                        {
                            LText.SettingsWindow.Paths_Thief3 = lt.Substring(13);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_Other="))
                        {
                            LText.SettingsWindow.Paths_Other = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_BackupPath="))
                        {
                            LText.SettingsWindow.Paths_BackupPath = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_FMArchivePaths="))
                        {
                            LText.SettingsWindow.Paths_FMArchivePaths = lt.Substring(21);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_IncludeSubfolders="))
                        {
                            LText.SettingsWindow.Paths_IncludeSubfolders = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_AddArchivePathToolTip="))
                        {
                            LText.SettingsWindow.Paths_AddArchivePathToolTip = lt.Substring(28);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_RemoveArchivePathToolTip="))
                        {
                            LText.SettingsWindow.Paths_RemoveArchivePathToolTip = lt.Substring(31);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Paths_ErrorSomePathsAreInvalid="))
                        {
                            LText.SettingsWindow.Paths_ErrorSomePathsAreInvalid = lt.Substring(31);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_TabText="))
                        {
                            LText.SettingsWindow.FMDisplay_TabText = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_GameOrganization="))
                        {
                            LText.SettingsWindow.FMDisplay_GameOrganization = lt.Substring(27);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_GameOrganizationByTab="))
                        {
                            LText.SettingsWindow.FMDisplay_GameOrganizationByTab = lt.Substring(32);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_GameOrganizationOneList="))
                        {
                            LText.SettingsWindow.FMDisplay_GameOrganizationOneList = lt.Substring(34);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_Sorting="))
                        {
                            LText.SettingsWindow.FMDisplay_Sorting = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_IgnoreArticles="))
                        {
                            LText.SettingsWindow.FMDisplay_IgnoreArticles = lt.Substring(25);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_MoveArticlesToEnd="))
                        {
                            LText.SettingsWindow.FMDisplay_MoveArticlesToEnd = lt.Substring(28);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_RatingDisplayStyle="))
                        {
                            LText.SettingsWindow.FMDisplay_RatingDisplayStyle = lt.Substring(29);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_RatingDisplayStyleNDL="))
                        {
                            LText.SettingsWindow.FMDisplay_RatingDisplayStyleNDL = lt.Substring(32);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_RatingDisplayStyleFMSel="))
                        {
                            LText.SettingsWindow.FMDisplay_RatingDisplayStyleFMSel = lt.Substring(34);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_RatingDisplayStyleUseStars="))
                        {
                            LText.SettingsWindow.FMDisplay_RatingDisplayStyleUseStars = lt.Substring(37);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_DateFormat="))
                        {
                            LText.SettingsWindow.FMDisplay_DateFormat = lt.Substring(21);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_CurrentCultureShort="))
                        {
                            LText.SettingsWindow.FMDisplay_CurrentCultureShort = lt.Substring(30);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_CurrentCultureLong="))
                        {
                            LText.SettingsWindow.FMDisplay_CurrentCultureLong = lt.Substring(29);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_Custom="))
                        {
                            LText.SettingsWindow.FMDisplay_Custom = lt.Substring(17);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_ErrorInvalidDateFormat="))
                        {
                            LText.SettingsWindow.FMDisplay_ErrorInvalidDateFormat = lt.Substring(33);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("FMDisplay_ErrorDateOutOfRange="))
                        {
                            LText.SettingsWindow.FMDisplay_ErrorDateOutOfRange = lt.Substring(30);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_TabText="))
                        {
                            LText.SettingsWindow.Other_TabText = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_FMFileConversion="))
                        {
                            LText.SettingsWindow.Other_FMFileConversion = lt.Substring(23);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_ConvertWAVsTo16BitOnInstall="))
                        {
                            LText.SettingsWindow.Other_ConvertWAVsTo16BitOnInstall = lt.Substring(34);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_ConvertOGGsToWAVsOnInstall="))
                        {
                            LText.SettingsWindow.Other_ConvertOGGsToWAVsOnInstall = lt.Substring(33);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_BackUpSaves="))
                        {
                            LText.SettingsWindow.Other_BackUpSaves = lt.Substring(18);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_BackUpSavesAndScreenshotsOnly="))
                        {
                            LText.SettingsWindow.Other_BackUpSavesAndScreenshotsOnly = lt.Substring(36);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_BackUpAllChangedFiles="))
                        {
                            LText.SettingsWindow.Other_BackUpAllChangedFiles = lt.Substring(28);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_BackUpAlwaysAsk="))
                        {
                            LText.SettingsWindow.Other_BackUpAlwaysAsk = lt.Substring(22);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_Language="))
                        {
                            LText.SettingsWindow.Other_Language = lt.Substring(15);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_WebSearch="))
                        {
                            LText.SettingsWindow.Other_WebSearch = lt.Substring(16);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_WebSearchURL="))
                        {
                            LText.SettingsWindow.Other_WebSearchURL = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_WebSearchTitleVar="))
                        {
                            LText.SettingsWindow.Other_WebSearchTitleVar = lt.Substring(24);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Other_WebSearchResetToolTip="))
                        {
                            LText.SettingsWindow.Other_WebSearchResetToolTip = lt.Substring(28);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[DateFilterBox]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("ReleaseDateTitleText="))
                        {
                            LText.DateFilterBox.ReleaseDateTitleText = lt.Substring(21);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("LastPlayedTitleText="))
                        {
                            LText.DateFilterBox.LastPlayedTitleText = lt.Substring(20);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("From="))
                        {
                            LText.DateFilterBox.From = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("To="))
                        {
                            LText.DateFilterBox.To = lt.Substring(3);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("NoMinimum="))
                        {
                            LText.DateFilterBox.NoMinimum = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("NoMaximum="))
                        {
                            LText.DateFilterBox.NoMaximum = lt.Substring(10);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[TagsFilterBox]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TitleText="))
                        {
                            LText.TagsFilterBox.TitleText = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("MoveToAll="))
                        {
                            LText.TagsFilterBox.MoveToAll = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("MoveToAny="))
                        {
                            LText.TagsFilterBox.MoveToAny = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("MoveToExclude="))
                        {
                            LText.TagsFilterBox.MoveToExclude = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Reset="))
                        {
                            LText.TagsFilterBox.Reset = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("IncludeAll="))
                        {
                            LText.TagsFilterBox.IncludeAll = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("IncludeAny="))
                        {
                            LText.TagsFilterBox.IncludeAny = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Exclude="))
                        {
                            LText.TagsFilterBox.Exclude = lt.Substring(8);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[RatingFilterBox]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TitleText="))
                        {
                            LText.RatingFilterBox.TitleText = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("From="))
                        {
                            LText.RatingFilterBox.From = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("To="))
                        {
                            LText.RatingFilterBox.To = lt.Substring(3);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[Importing]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("NothingWasImported="))
                        {
                            LText.Importing.NothingWasImported = lt.Substring(19);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("SelectedFileIsNotAValidPath="))
                        {
                            LText.Importing.SelectedFileIsNotAValidPath = lt.Substring(28);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ImportFromDarkLoader_TitleText="))
                        {
                            LText.Importing.ImportFromDarkLoader_TitleText = lt.Substring(31);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("DarkLoader_SelectedFileIsNotDarkLoaderIni="))
                        {
                            LText.Importing.DarkLoader_SelectedFileIsNotDarkLoaderIni = lt.Substring(42);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("DarkLoader_SelectedDarkLoaderIniWasNotFound="))
                        {
                            LText.Importing.DarkLoader_SelectedDarkLoaderIniWasNotFound = lt.Substring(44);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("DarkLoader_NoArchiveDirsFound="))
                        {
                            LText.Importing.DarkLoader_NoArchiveDirsFound = lt.Substring(30);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ImportFromNewDarkLoader_TitleText="))
                        {
                            LText.Importing.ImportFromNewDarkLoader_TitleText = lt.Substring(34);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ImportFromFMSel_TitleText="))
                        {
                            LText.Importing.ImportFromFMSel_TitleText = lt.Substring(26);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ChooseNewDarkLoaderIniFiles="))
                        {
                            LText.Importing.ChooseNewDarkLoaderIniFiles = lt.Substring(28);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ChooseFMSelIniFiles="))
                        {
                            LText.Importing.ChooseFMSelIniFiles = lt.Substring(20);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief1="))
                        {
                            LText.Importing.Thief1 = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief2="))
                        {
                            LText.Importing.Thief2 = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Thief3="))
                        {
                            LText.Importing.Thief3 = lt.Substring(7);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
                else if (lineT == "[ScanAllFMsBox]")
                {
                    while (i < lines.Length - 1)
                    {
                        var lt = lines[i + 1].TrimStart();
                        if (lt.StartsWithFast_NoNullChecks("TitleText="))
                        {
                            LText.ScanAllFMsBox.TitleText = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ScanAllFMsFor="))
                        {
                            LText.ScanAllFMsBox.ScanAllFMsFor = lt.Substring(14);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Title="))
                        {
                            LText.ScanAllFMsBox.Title = lt.Substring(6);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Author="))
                        {
                            LText.ScanAllFMsBox.Author = lt.Substring(7);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Game="))
                        {
                            LText.ScanAllFMsBox.Game = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("CustomResources="))
                        {
                            LText.ScanAllFMsBox.CustomResources = lt.Substring(16);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Size="))
                        {
                            LText.ScanAllFMsBox.Size = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("ReleaseDate="))
                        {
                            LText.ScanAllFMsBox.ReleaseDate = lt.Substring(12);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Tags="))
                        {
                            LText.ScanAllFMsBox.Tags = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("SelectAll="))
                        {
                            LText.ScanAllFMsBox.SelectAll = lt.Substring(10);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("SelectNone="))
                        {
                            LText.ScanAllFMsBox.SelectNone = lt.Substring(11);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("Scan="))
                        {
                            LText.ScanAllFMsBox.Scan = lt.Substring(5);
                        }
                        else if (lt.StartsWithFast_NoNullChecks("NothingWasScanned="))
                        {
                            LText.ScanAllFMsBox.NothingWasScanned = lt.Substring(18);
                        }
                        else if (!string.IsNullOrEmpty(lt) && lt[0] == '[' && lt[lt.Length - 1] == ']')
                        {
                            break;
                        }
                        i++;
                    }
                }
            }
        }
    }
}
